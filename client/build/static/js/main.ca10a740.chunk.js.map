{"version":3,"sources":["utils/auth.js","pages/loggedOut.js","utils/API.js","pages/TaskDash.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","loggedOut","Auth","loggedIn","Container","getMe","fetch","headers","authorization","createTask","taskData","method","body","JSON","stringify","i","TaskDash","useState","userData","setUserData","title","description","deadline","setTaskData","handleOnChange","event","console","log","target","id","value","userDataLength","Object","keys","length","useEffect","response","ok","Error","json","user","error","getUserData","createTaskData","userId","_id","createTasks","Form","className","rows","placeholder","required","onChange","Button","onClick","CardColumns","tasks","map","Card","key","border","Body","Title","Text","SignupForm","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","handleInputChange","name","handleFormSubmit","preventDefault","currentTarget","checkValidity","stopPropagation","login","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","Feedback","disabled","LoginForm","AppNavbar","showModal","setShowModal","Navbar","bg","expand","fluid","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","logout","Modal","size","onHide","aria-labelledby","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","App","exact","path","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca10a740.chunk.js","sourcesContent":["// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\n\nconst loggedOut = () => {\n  const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  if (!token) {\n    return (\n      <>\n        <Container>\n          <h2>\n            Log in to continue\n          </h2>\n        </Container>\n      </>\n    )\n  } else\n\n  return (\n    <>\n      <Container>\n        <h2>\n        </h2>\n      </Container>\n    </>\n  );\n};\n\nexport default loggedOut;\n","// route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n  return fetch('/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const createUser = (userData) => {\n  return fetch('/api/users', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const loginUser = (userData) => {\n  return fetch('/api/users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\n// function used for the creation of a new task\nexport const createTask = (taskData, token) => {\n  return fetch('/api/tasks', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(taskData),\n  });\n};\nexport const getTasks = (token) => {\n  return fetch('/api/tasks', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    }\n  });\n};\n\n// save book data for a logged in user\nexport const saveTask = (taskData, token) => {\n  return fetch('/api/tasks', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(taskData),\n  });\n};\n\n// remove saved book data for a logged in user\nexport const deleteTask = (taskId, token) => {\n  return fetch(`/api/tasks/${taskId}`, {\n    method: 'DELETE',\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport { Container, CardColumns, Card, Button, Form } from 'react-bootstrap';\n\nimport { getMe, createTask, getTasks } from '../utils/API';\nimport Auth from '../utils/auth';\n\nfunction TaskDash() {\n  const [userData, setUserData] = useState({});\n  const [taskData, setTaskData] = useState({\n    title: \"\",\n    description: \"\",\n    deadline: \"\"\n  });\n\n  const handleOnChange = (event) => {\n    console.log(event.target.id);\n    setTaskData({\n      ...taskData,\n      [event.target.id]: event.target.value\n    })\n  }\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n  \n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n          return false;\n        }\n\n        const response = await getMe(token);\n\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n\n        const user = await response.json();\n        setUserData(user);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    getUserData();\n  }, [userDataLength]);\n\n  const createTaskData = async () => {\n    console.log('Hello')\n    try {\n      const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n      if (!token) {\n        console.log('no token');\n        return false;\n      }\n\n      const response = await createTask({...taskData, userId:userData._id}, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const createTasks = await response.json();\n      setUserData(createTasks);\n\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  console.log(\"Hi\")\n  return (\n    <>\n      <Container>\n        <h2>\n          Todays Tasks\n        </h2>\n        <Form>\n          <textarea className=\"form-control\" id=\"title\" rows=\"3\" title=\"This field is required\" placeholder=\"Title\" required onChange={handleOnChange}></textarea>\n          <textarea className=\"form-control\" id=\"description\" rows=\"3\" title=\"This field is required\" placeholder=\"Description\" onChange={handleOnChange}></textarea>\n          <textarea className=\"form-control\" id=\"deadline\" rows=\"3\" title=\"This field is required\" placeholder=\"Deadline\" onChange={handleOnChange}></textarea>\n          <Button className='submitBtn' onClick={createTaskData}>\n            Save\n          </Button>\n        </Form>\n      </Container>\n      <CardColumns>\n        {userData?.tasks?.map((tasks, id) => {\n          return (\n            <Card key={tasks.id} border='dark'>\n              <Card.Body>\n                <Card.Title>{tasks.title}</Card.Title>\n                <p className='small'>Authors: {tasks.description}</p>\n                <Card.Text>{tasks.description}</Card.Text>\n                {/* <Button className='btn-block btn-danger' onClick={handleDeleteTask(taskData.taskId)}>\n                    Delete this taskData!\n                  </Button> */}\n              </Card.Body>\n            </Card>\n          );\n        })}\n      </CardColumns>\n    </>\n  )\n\n\n  // create function that accepts the taskData's mongo _id value as param and deletes the taskData from the database\n  // const handleDeleteTask = async (taskId) => {\n  //   const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  //   if (!token) {\n  //     return false;\n  //   }\n\n  //   try {\n  //     const response = await deleteTask(taskId, token);\n\n  //     if (!response.ok) {\n  //       throw new Error('something went wrong!');\n  //     }\n\n  //     const updatedUser = await response.json();\n  //     setUserData(updatedUser);\n\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // };\n\n  // // if data isn't here yet, say so\n  // if (!userDataLength) {\n  //   return <h2>LOADING...</h2>;\n  // }\n};\n\nexport default TaskDash;\n","import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { createUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await createUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { loginUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await loginUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            The Task Master\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              <Nav.Link as={Link} to='/'>\n                Search For Teams\n              </Nav.Link>\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/tasks'>\n                    See Your Tasks\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport loggedOut from './pages/loggedOut';\nimport TaskDash from './pages/TaskDash';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <Router>\n      <>\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={loggedOut} />\n          <Route exact path='/tasks' component={TaskDash} />\n          <Route render={() => <h1 className='display-2'>Wrong page!</h1>} />\n        </Switch>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}